@import 'mixins/flexbox';
@import 'mixins/sticky';
@import 'mixins/user-select';

$topic-border-color: rgba(166, 166, 166, .8);

$link-color: #4b7fd4;

$row-hover-colour-change: 7.5%;

$breakpoint: 480px;

$transition-time: 200ms;

@import 'variant';

$dark-mode: lightness($primary-background) < 50%;

@if $dark-mode {
	$link-color: hsl(hue($link-color), saturation($link-color), 100% - lightness($link-color));
}

@import 'components/nickcolours';

* {
	box-sizing: border-box;
	text-rendering: optimizeLegibility;
}

body {
	background-color: $primary-background;
	color: $primary-foreground;
	min-height: 100vh;
	margin: 0;
	overflow-x: hidden;
	@include flex();
	@include flex-direction(column);
	@include align-items(center);
	@include justify-content(flex-end);
}

h1, b {
	font-weight: bolder;
}

small {
	font-size: 1em;
	opacity: .8;
	font-weight: lighter;
}

a:link,
.channel {
	color: $link-color;
	text-decoration: none;
	-webkit-hyphens: none;
	hyphens: none;
	cursor: pointer;

	&:hover {
		text-decoration: underline;
	}
}

#loading_screen {
	background-color: $primary-background;
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	padding: 2em;
	font-size: 2em;
	font-weight: bolder;
	z-index: 999;
	transition: opacity $transition-time ease-in-out;
	@include flex();
	@include flex-direction(column);
	@include align-items(center);
	@include justify-content(center);
}

#body_home {
	width: 100%;
	margin: .5em 0;
}

#topic_bar {
	background-color: transparentize($primary-background, .2);
	border-bottom: 1px solid $topic-border-color;
	@include sticky();
	top: 0;
	left: 0;
	right: 0;
	width: 100%;
	@include flex-shrink(0);
	font-size: 1.2em;
	line-height: 2em;
	padding: 0 1em;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	word-break: break-word;
	z-index: 1;
	-webkit-transition: padding-right $transition-time ease-in-out;
	transition: padding-right $transition-time ease-in-out;

	&:hover {
		white-space: initial;
	}

	&:before {
		content: 'The topic is';
		opacity: .8;
		margin-right: .5em;
		@include user-select(none);
	}
}

.line {
	width: 100%;
	line-height: 1.5em;
	background-color: transparent;
	border-top: 1px solid transparent;
	border-bottom: 1px solid transparent;
	-webkit-transition: background-color $transition-time ease-in-out, border-color $transition-time ease-in-out;
	transition: background-color $transition-time ease-in-out, border-color $transition-time ease-in-out;

	> p {
		overflow: hidden;
		margin: 0;
		padding: .1em 1em;
		@include flex();
		@include flex-direction(row);
		@include align-content(space-between);
		@include flex-wrap(wrap);

		@media (min-width: $breakpoint) {
			@include flex-wrap(nowrap);
		}
	}

	.message {
		@include flex-grow(1);
		@include flex();
		@include flex-direction(row);
		@include align-content(space-between);
		@include flex-wrap(wrap);

		@media (min-width: $breakpoint) {
			@include flex-wrap(nowrap);
			width: auto;
		}

		.senderContainer {
			@include flex-shrink(0);
			@include flex-grow(1);
			width: 50%;
			font-weight: bolder;

			@media (min-width: $breakpoint) {
				text-align: right;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
				word-break: break-all;
				@include flex-grow(0);
				min-width: 8em;
				max-width: 8em;
				width: auto;
				-webkit-transition: max-width $transition-time ease-in-out;
				transition: max-width $transition-time ease-in-out;
			}
		}

		.innerMessage {
			word-break: break-word;
			-webkit-hyphens: auto;
			-moz-hyphens: auto;
			hyphens: auto;
			width: 100%;

			@media (min-width: $breakpoint) {
				padding: 0 .5em;
			}
		}
	}

	.time {
		@include flex-shrink(0);
		@include flex-grow(1);
		@include order(5);
		text-align: right;
		opacity: 0;
		-webkit-transform: translateX(100px);
		transform: translateX(100px);
		-webkit-transition: opacity $transition-time ease-in-out, -webkit-transform $transition-time ease-in-out;
		transition: opacity $transition-time ease-in-out, transform $transition-time ease-in-out;
		display: none;

		@media (min-width: $breakpoint) {
			@include flex-grow(0);
			@include order(10);
			display: inline;
		}
	}

	&[ltype*='action'] {
		> p {
			@include flex-wrap(nowrap);
		}

		.message {

			.senderContainer {
				width: auto;
				@include flex-grow(0);
			}
			
			.innerMessage {
				padding: 0 .5em;
			}

			.senderContainer,
			.innerMessage {
				font-style: italic;
			}
		}

		.time {
			-webkit-order: 10;
			order: 10;
		}

		/* Actions starting with punctuation are formatted to align with nickname */
		&.punctuated .innerMessage {
			padding-left: 0;
		}
	}

	&.event {
		> p {
			@include flex-wrap(nowrap);
		}

		@if $dark-mode {

			color: darken($primary-foreground, 25%);

		} @else {

			color: lighten($primary-foreground, 25%);

		}

		.message {
			display: block;
			width: auto;

			@media (min-width: $breakpoint) {
				margin-left: 8.5em;
			}
		}

		.time {
			@include flex-grow(0);
			@include order(10);
		}
	}

	@media (min-width: $breakpoint) {

		&.repeated-nickname:not([ltype*='action']) {

			.message .senderContainer {
				opacity: 0;
				-webkit-transform: translateX(-10em);
				transform: translateX(-10em);
				-webkit-transition: opacity $transition-time ease-in-out, -webkit-transform $transition-time ease-in-out;
				transition: opacity $transition-time ease-in-out, transform $transition-time ease-in-out;
			}

			&:hover {

				.message .senderContainer {
					opacity: 1;
					-webkit-transform: translateX(0);
					transform: translateX(0);
				}
			}
		}
	}
	
	@media (min-width: $breakpoint) {

		&:hover {
			overflow: visible;

			@if $dark-mode {

				background-color: lighten($primary-background, $row-hover-colour-change);
				border-color: lighten($primary-background, $row-hover-colour-change * 2);

			} @else {

				background-color: darken($primary-background, $row-hover-colour-change);
				border-color: darken($primary-background, $row-hover-colour-change * 2);

			}

			.message {

				.senderContainer {
					max-width: 100%;
					width: auto;
					word-break: initial;
				}
			}

			.time {
				opacity: 1;
				-webkit-transform: translateX(0);
				transform: translateX(0);
			}
		}
	}

	// Chatting with a znc service; use monospaced fonts
	&[nickname^="*"] .innerMessage {
		font-family: 'Menlo', 'Monaco', monospace;
	}

	// Lines where current user was highlighted
	&[highlight="true"] {
		background-color: hsla(270, 50%, 57%, .1);
		border-color: hsla(270, 50%, 57%, .3);

		.message .senderContainer,
		.inline_nickname,
		a:link,
		.channel {
			text-shadow: .15em .15em 0 $primary-background,
				.15em 0 0 $primary-background,
				.15em -.15em 0 $primary-background,
				0 -.15em 0 $primary-background,
				-.15em -.15em 0 $primary-background,
				-.15em 0 0 $primary-background,
				-.15em .15em 0 $primary-background,
				0 .15em 0 $primary-background;
		}

		.message .senderContainer,
		.inline_nickname {
			padding-right: .15em;
		}
	}

	// Lines after mark are highlighted

	#mark ~ &:not([highlight="true"]) {

		@if $dark-mode {

			background-color: lighten($primary-background, $row-hover-colour-change / 2);

		} @else {

			background-color: darken($primary-background, $row-hover-colour-change / 2);

		}

		&:last-child {

			@if $dark-mode {

				border-bottom: 1px solid  lighten($primary-background, $row-hover-colour-change);

			} @else {

				border-bottom: 1px solid  darken($primary-background, $row-hover-colour-change);

			}
		}

		&:hover {

			@if $dark-mode {

				background-color: lighten($primary-background, $row-hover-colour-change * .75);
				border-color: lighten($primary-background, $row-hover-colour-change * 1.5);

			} @else {

				background-color: darken($primary-background, $row-hover-colour-change * .75);
				border-color: darken($primary-background, $row-hover-colour-change * 1.5);

			}
		}
	}

	#mark + &:not([highlight="true"]) {

		@if $dark-mode {

			border-top: 1px solid lighten($primary-background, $row-hover-colour-change);

		} @else {

			border-top: 1px solid darken($primary-background, $row-hover-colour-change);

		}
	}
}

#mark {
	display: none;
}

.inline_nickname {
	font-weight: bolder;
}

.inlineImageCell {
	@include user-select(none);
	display: block;
	max-width: 100%;
	max-height: 60vh;
	overflow: auto;
	position: relative;

	.closeButton {
		position: absolute;
		display: block;
		width: 25px;
		height: 25px;
		background: black;
		border: 3px solid white;
		border-radius: 50%;
		color: white;
		box-shadow: 0 3px 5px black;
		cursor: pointer;
		text-align: center;
	}

	img {
		padding: .25em;
		background-color: invert($primary-background);
		border: 1px solid #ccc;
		border-radius: .25em;
	}
}
